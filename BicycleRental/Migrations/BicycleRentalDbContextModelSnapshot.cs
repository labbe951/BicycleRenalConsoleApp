// <auto-generated />
using System;
using BicycleRental;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BicycleRental.Migrations
{
    [DbContext(typeof(BicycleRentalDbContext))]
    partial class BicycleRentalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BicycleRental.Models.Bicycle", b =>
                {
                    b.Property<int>("Bicycle_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Brand_id")
                        .HasColumnType("int");

                    b.Property<int>("Frame_number")
                        .HasColumnType("int");

                    b.HasKey("Bicycle_id");

                    b.HasIndex("Brand_id");

                    b.ToTable("Bicycles");
                });

            modelBuilder.Entity("BicycleRental.Models.Bicycle_brand", b =>
                {
                    b.Property<int>("Brand_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Avilability")
                        .HasColumnType("bit");

                    b.Property<string>("Bicycle_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bicycle_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Brand_id");

                    b.ToTable("Bicycle_brands");
                });

            modelBuilder.Entity("BicycleRental.Models.Booking_detail", b =>
                {
                    b.Property<int>("Booking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Bicycle_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Booking_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Customer_id")
                        .HasColumnType("int");

                    b.Property<float>("Rental_price")
                        .HasColumnType("real");

                    b.Property<DateTime>("Return_due_date")
                        .HasColumnType("datetime2");

                    b.HasKey("Booking_id");

                    b.HasIndex("Bicycle_id");

                    b.HasIndex("Customer_id");

                    b.ToTable("Booking_details");
                });

            modelBuilder.Entity("BicycleRental.Models.Customer", b =>
                {
                    b.Property<int>("Customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Customer_First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("E_mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Phone_number")
                        .HasColumnType("BigInt");

                    b.HasKey("Customer_id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BicycleRental.Models.DatabaseOwner", b =>
                {
                    b.Property<string>("OwnersFirstName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OwnersLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OwnersFirstName");

                    b.ToTable("DatabaseOwners");
                });

            modelBuilder.Entity("BicycleRental.Models.Bicycle", b =>
                {
                    b.HasOne("BicycleRental.Models.Bicycle_brand", "Bicycle_brand")
                        .WithMany("Bicycles")
                        .HasForeignKey("Brand_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bicycle_brand");
                });

            modelBuilder.Entity("BicycleRental.Models.Booking_detail", b =>
                {
                    b.HasOne("BicycleRental.Models.Bicycle", "Bicycle")
                        .WithMany("Booking_Details")
                        .HasForeignKey("Bicycle_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BicycleRental.Models.Customer", "Customer")
                        .WithMany("Booking_details")
                        .HasForeignKey("Customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bicycle");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BicycleRental.Models.Bicycle", b =>
                {
                    b.Navigation("Booking_Details");
                });

            modelBuilder.Entity("BicycleRental.Models.Bicycle_brand", b =>
                {
                    b.Navigation("Bicycles");
                });

            modelBuilder.Entity("BicycleRental.Models.Customer", b =>
                {
                    b.Navigation("Booking_details");
                });
#pragma warning restore 612, 618
        }
    }
}
